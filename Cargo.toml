[package]
name = "eduos-rs"
version = "0.1.0"
license = "MIT"
authors = ["Stefan Lankes <slankes@eonerc.rwth-aachen.de>"]

[dependencies]
spin = "0.4.9"	# Spinlocks.
bootloader = "0.2.0-alpha"

[target.'cfg(target_arch = "x86_64")'.dependencies.cpuio]
version = "0.2.0"

#[target.'cfg(target_arch = "x86_64")'.dependencies.raw-cpuid]
#version = "3.0.0"

[target.'cfg(target_arch = "x86_64")'.dependencies.x86]
path = "crates/x86"
default-features = false

[build-dependencies]
cc = "1.*"

[package.metadata.cargo-xbuild]
memcpy = true

[package.metadata.bootimage]
default-target = "x86_64-eduos.json" # This target is used if no `--target` is passed
output = "bootimage.bin"    # The output file name
minimum-image-size = 0      # The minimum output file size (in MiB)
# The command invoked on `bootimage run`
# (the "{}" will be replaced with the path to the bootable disk image)
run-command = ["qemu-system-x86_64", "-drive", "format=raw,file={}"]

[package.metadata.bootimage.bootloader]
name = "bootloader"                 # The bootloader crate name
target = "x86_64-bootloader.json"   # Target triple for compiling the bootloader

# The development profile, used for `cargo build`.
[profile.dev]
opt-level = 0      # controls the `--opt-level` the compiler builds with
debug = true       # controls whether the compiler passes `-C debuginfo`
                   # a value of `true` is equivalent to `2`
rpath = false      # controls whether the compiler passes `-C rpath`
lto = false        # controls `-C lto` for binaries and staticlibs
debug-assertions = true # controls whether debug assertions are enabled
codegen-units = 1  # controls whether the compiler passes `-C codegen-units`
                   # `codegen-units` is ignored when `lto = true`

# The release profile, used for `cargo build --release`.
[profile.release]
opt-level = 3
debug = false
rpath = false
lto = true
debug-assertions = false
codegen-units = 1
